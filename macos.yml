---
- name: MacOS configuration
  hosts: all
  vars_files:
    - vars/main.yml
  vars:
    brew_bin_path: "{{ '/opt/homebrew/bin' if ansible_facts['machine'] == 'arm64' else '/usr/local/Homebrew/bin' }}"

  pre_tasks:
    - name: Set base formulae
      ansible.builtin.set_fact:
        formulae_to_install: "{{ base_formulae }}"
        casks_to_install: "{{ base_casks }}"
      tags: always

    - name: Add optional brew formulae
      tags: never, full
      block:
        - name: Add mas formulae
          ansible.builtin.set_fact:
            formulae_to_install: "{{ formulae_to_install + ['mas'] }}"
          tags: mas

        - name: Add development formulae and casks
          ansible.builtin.set_fact:
            formulae_to_install: "{{ formulae_to_install + devel_formulae }}"
            casks_to_install: "{{ casks_to_install + devel_casks }}"
          tags: devel

        - name: Add office formulae and casks
          ansible.builtin.set_fact:
            formulae_to_install: "{{ formulae_to_install + office_formulae }}"
            casks_to_install: "{{ casks_to_install + office_casks }}"
          tags: office

        - name: Add security formulae and casks
          ansible.builtin.set_fact:
            formulae_to_install: "{{ formulae_to_install + security_formulae }}"
            casks_to_install: "{{ casks_to_install + security_casks }}"
          tags: security

        - name: Add virtualization formulae and casks
          ansible.builtin.set_fact:
            formulae_to_install: "{{ formulae_to_install + v12n_formulae }}"
            casks_to_install: "{{ casks_to_install + v12n_casks }}"
          tags: v12n

        - name: Add navigation formulae and casks
          ansible.builtin.set_fact:
            formulae_to_install: "{{ formulae_to_install + navi_formulae }}"
            casks_to_install: "{{ casks_to_install + navi_casks }}"
          tags: navigation

  roles:
    - role: macos_components
      tags: always
    - role: homebrew
      vars:
        homebrew_taps: "{{ brew_taps }}"
        homebrew_fonts: "{{ brew_fonts }}"
        homebrew_formulae: "{{ formulae_to_install }}"
        homebrew_casks: "{{ casks_to_install }}"
      tags: always
    - role: git_repositories
      vars:
        git_repositories_repos:
          - repository: "{{ omz_repository }}"
            destination: "{{ omz_directory }}"
            update: false
            version: "master"
          - repository: "{{ p10k_repository }}"
            destination: "{{ p10k_directory }}"
            update: false
            version: "master"
      tags: always

  tasks:
    - name: Get list of all installed MAS Apps
      ansible.builtin.command:
        cmd: "{{ brew_bin_path }}/mas list"
      register: installed_apps
      check_mode: false
      changed_when: false
      tags: mas, never, full

    - name: Ensure MAS apps are present
      ansible.builtin.command:
        cmd: "{{ brew_bin_path }}/mas install {{ item.id | default(item) }}"
      register: mas_result
      with_items: "{{ mas_installed_apps }}"
      when: (item.id | default(item) | string) not in installed_apps.stdout
      changed_when: "mas_result.rc == 0"
      tags: mas, never, full

    - name: Ensure configuration files are present
      ansible.builtin.template:
        src: "{{ item.source }}"
        dest: "{{ item.destination }}"
        backup: "{{ item.backup }}"
        mode: "{{ item.mode }}"
      with_items: "{{ configuration_templates }}"
      tags: always

    - name: Ensure configuration files are present
      ansible.builtin.copy:
        src: "{{ item.source }}"
        dest: "{{ item.destination }}"
        backup: "{{ item.backup }}"
        mode: "{{ item.mode }}"
      with_items: "{{ configuration_files }}"
      tags: always

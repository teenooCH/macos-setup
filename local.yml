---
- name: MacOS configuration
  hosts: all
  gather_facts: true
  become: false
  vars_files:
    - vars.yml
  pre_tasks:
    - name: Set global vars
      ansible.builtin.set_fact:
        all_brew_pkgs: []
        all_cask_pkgs: []
      tags: always

    - name: Ensure extra Homebrew Taps are present
      community.general.homebrew_tap:
        name: "{{ item }}"
      with_items: "{{ brew_taps }}"
      tags: always

    - name: Update Homebrew repositories
      community.general.homebrew:
        update_homebrew: true
      changed_when: false
      tags: always

  tasks:
    - name: Add base packages
      ansible.builtin.set_fact:
        all_brew_pkgs: "{{ all_brew_pkgs + base_brew_pkgs }}"
        all_cask_pkgs: "{{ all_cask_pkgs + base_cask_pkgs + brew_fonts }}"
      tags: always

    - name: Add optional brew packages
      tags: never, full
      block:
        - name: Add development packages
          ansible.builtin.set_fact:
            all_brew_pkgs: "{{ all_brew_pkgs + devel_brew_pkgs }}"
            all_cask_pkgs: "{{ all_cask_pkgs + devel_cask_pkgs }}"
          tags: devel

        - name: Add office packages
          ansible.builtin.set_fact:
            all_brew_pkgs: "{{ all_brew_pkgs + office_brew_pkgs }}"
            all_cask_pkgs: "{{ all_cask_pkgs + office_cask_pkgs }}"
          tags: office

        - name: Add security packages
          ansible.builtin.set_fact:
            all_brew_pkgs: "{{ all_brew_pkgs + security_brew_pkgs }}"
            all_cask_pkgs: "{{ all_cask_pkgs + security_cask_pkgs }}"
          tags: security

        - name: Add virtualization packages
          ansible.builtin.set_fact:
            all_brew_pkgs: "{{ all_brew_pkgs + v12n_brew_pkgs }}"
            all_cask_pkgs: "{{ all_cask_pkgs + v12n_cask_pkgs }}"
          tags: v12n

        - name: Add navigation packages
          ansible.builtin.set_fact:
            all_brew_pkgs: "{{ all_brew_pkgs + navi_brew_pkgs }}"
            all_cask_pkgs: "{{ all_cask_pkgs + navi_cask_pkgs }}"
          tags: navigation

    - name: Ensure Homebrew Formulae are present
      community.general.homebrew:
        name: "{{ item }}"
      with_items: "{{ all_brew_pkgs }}"
      tags: always

    - name: Ensure Homebrew Casks are present
      community.general.homebrew_cask:
        name: "{{ item }}"
        accept_external_apps: true
      with_items: "{{ all_cask_pkgs }}"
      tags: always

    - name: Get all installed Apps
      ansible.builtin.command: mas list
      register: installed_apps
      check_mode: false
      changed_when: false
      tags: always

    - name: Ensure MAS apps are present
      ansible.builtin.command: mas install "{{ item.id | default(item) }}"
      with_items: "{{ mas_installed_apps }}"
      when: (item.id | default(item) | string) not in installed_apps.stdout
      tags: always

    - name: Clone Oh My ZSH repository
      ansible.builtin.git:
        repo: "{{ omz_repository }}"
        dest: "{{ omz_directory }}"
        depth: 1
        update: false
        version: "master"
      tags: always

    - name: Clone Powerlevel10k repository
      ansible.builtin.git:
        repo: "{{ p10k_repository }}"
        dest: "{{ p10k_directory }}"
        depth: 1
        update: false
        version: "master"
      tags: always

    - name: Ensure configuration files are present
      ansible.builtin.template:
        src: "{{ item.source }}"
        dest: "{{ item.destination }}"
        backup: "{{ item.backup }}"
        mode: "{{ item.mode }}"
      with_items: "{{ configuration_templates }}"
      tags: always

    - name: Ensure configuration files are present
      ansible.builtin.copy:
        src: "{{ item.source }}"
        dest: "{{ item.destination }}"
        backup: "{{ item.backup }}"
        mode: "{{ item.mode }}"
      with_items: "{{ configuration_files }}"
      tags: always
